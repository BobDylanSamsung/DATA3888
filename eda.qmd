---
title: "eda"
format: html
editor: visual
---

# EDA

```{r}
library(GEOquery)
library(limma)
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(reshape2)
library(ggfortify)
library(knitr)
library(tidyverse)
```

## 1 Load Data

```{r}
# GSE28735
gse28735 <- getGEO("GSE28735", GSEMatrix = TRUE)[[1]]
exprs28735 <- exprs(gse28735)
pdata28735 <- pData(gse28735)

# GSE62452
gse62452 <- getGEO("GSE62452", GSEMatrix = TRUE)[[1]]
exprs62452 <- exprs(gse62452)
pdata62452 <- pData(gse62452)
```

## 2 **Inspect Datasets**

### 2.1 Overview + histograms

```{r}
dim(exprs28735)  # Rows: genes, Columns: samples
summary(exprs28735)
hist(exprs28735, breaks=100, main="GSE28735 Expression", xlab="Expression")

dim(exprs62452)
summary(exprs62452)
hist(exprs62452, breaks=100, main="GSE62452 Expression", xlab="Expression")
```

### 2.2 Summarised table

```{r}
summarised <- as.data.frame(t(apply(exprs28735, 2, summary)))
summarised$SampleID <- rownames(summarised)
summarised <- summarised %>%
  relocate(SampleID) %>%
  rename(
    Min = "Min.",
    Q1 = "1st Qu.",
    Median = "Median",
    Mean = "Mean",
    Q3 = "3rd Qu.",
    Max = "Max."
  )

# View first few rows
head(summarised)

kable(summarised, caption = "Summary Statistics for GSE28735 Samples")

```

### 2.3 Box plot overview

```{r}
# box plot
summarised_long <- summarised %>%
  pivot_longer(cols = -SampleID, names_to = "Statistic", values_to = "Value")

ggplot(summarised_long, aes(x = Statistic, y = Value)) +
  geom_boxplot() +
  facet_wrap(~ Statistic, scales = "free") +
  ggtitle("Distribution of Summary Stats Across Samples") +
  theme_minimal()
```

### 2.4 Box plot per sample

```{r}
boxplot(exprs28735, outline=FALSE, las=2, main="GSE28735 Expression per Sample")
boxplot(exprs62452, outline=FALSE, las=2, main="GSE62452 Expression per Sample")
```

## 3 PCA plot

### 3.1 Clean data labels

```{r}
pdata28735 <- pData(gse28735)

# Add group as a new column in pdata
pdata28735$Tissue <- ifelse(grepl("non-tumor", pdata28735$source_name_ch1, ignore.case = TRUE),
                            "Normal", "Tumor")
pdata28735$Tissue <- factor(pdata28735$Tissue)
table(pdata28735$Tissue)  # Check if it split correctly

pdata62452 <- pData(gse62452)

# Add group as a new column in pdata
pdata62452$Tissue <- ifelse(grepl("non-tumor", pdata62452$source_name_ch1, ignore.case = TRUE),
                            "Normal", "Tumor")
pdata62452$Tissue <- factor(pdata62452$Tissue)
table(pdata62452$Tissue)  # Check if it split correctly
```

### 3.2 Plot

```{r}
# Transpose the expression matrix
expr28735_t <- t(exprs(gse28735))

# Now use autoplot with the correct metadata column
library(ggfortify)
autoplot(prcomp(expr28735_t, scale. = TRUE),
         data = pdata28735,
         colour = 'Tissue') +
  ggtitle("PCA of GSE28735 Samples") +
  theme_minimal()

# Transpose the expression matrix
expr62452_t <- t(exprs(gse62452))

# Now use autoplot with the correct metadata column
library(ggfortify)
autoplot(prcomp(expr62452_t, scale. = TRUE),
         data = pdata62452,
         colour = 'Tissue') +
  ggtitle("PCA of GSE62452 Samples") +
  theme_minimal()

```

## 4 Heatmap

```{r}
library(pheatmap)
# GSE28735
# Recalculate top 100 variable genes
expr <- exprs(gse28735)
vars <- apply(expr, 1, var)
top_genes <- names(sort(vars, decreasing = TRUE)[1:100])

# Tissue labels (fix if needed)
pdata28735$Tissue <- ifelse(grepl("non-tumor", pdata28735$source_name_ch1, ignore.case = TRUE),
                            "Normal", "Tumor")
pdata28735$Tissue <- factor(pdata28735$Tissue)

# Annotation dataframe
annotation_col <- data.frame(Tissue = pdata28735$Tissue)
rownames(annotation_col) <- rownames(pdata28735)  # Match sample IDs

# Generate the heatmap with annotation
pheatmap(expr[top_genes, ],
         scale = "row",
         show_rownames = FALSE,
         show_colnames = FALSE,
         annotation_col = annotation_col,
         main = "Top 100 Variable Genes - GSE28735 (Annotated)")

# GSE62452
# Recalculate top 100 variable genes
expr <- exprs(gse62452)
vars <- apply(expr, 1, var)
top_genes <- names(sort(vars, decreasing = TRUE)[1:100])

# Tissue labels (fix if needed)
pdata62452$Tissue <- ifelse(grepl("non-tumor", pdata62452$source_name_ch1, ignore.case = TRUE),
                            "Normal", "Tumor")
pdata62452$Tissue <- factor(pdata62452$Tissue)

# Annotation dataframe
annotation_col <- data.frame(Tissue = pdata62452$Tissue)
rownames(annotation_col) <- rownames(pdata62452)  # Match sample IDs

# Generate the heatmap with annotation
pheatmap(expr[top_genes, ],
         scale = "row",
         show_rownames = FALSE,
         show_colnames = FALSE,
         annotation_col = annotation_col,
         main = "Top 100 Variable Genes - GSE62452 (Annotated)")
```

## 5 Differential Expression Analysis

```{r}
# 
```
